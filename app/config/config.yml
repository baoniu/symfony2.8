imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ScourgenPersonFinderBundle/Resources/config/services.yml" }
    - { resource: "@BloggerBlogBundle/Resources/config/services.yml" }
    - { resource: "@BloggerBlogBundle/Resources/config/config.yml"}
# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
#parameters:
#    locale: en


framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    translator:
        fallback:   ['%locale%'] #如果某个语言没有对应的翻译，就显示fallbacks里的语言翻译
    default_locale:  "%locale%" # 假如用户没有明确表示想要看哪个语言的页面
                                # 就认为当前用户是想看%locale%指定语言的页面
                                # 用户可通过HTTP请求中的`accept_language`
                                # 或者路由里的设置比如`domain.com/zh_CN/home`来指定，可以配置
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          '%kernel.debug%'
#    use_controller: '%kernel.debug%'
    use_controller: false
    bundles:
        - ScourgenPersonFinderBundle
        - MopaBootstrapBundle
        - BloggerBlogBundle
    filters:
        cssrewrite: ~

        yui_css:
            jar: /usr/local/lib/node_modules/yuicompressor/build/yuicompressor-2.4.8.jarw
        less:
            node: /usr/local/bin/node
            node_paths: [/usr/local/lib/node_modules, /opt/lessc]


# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
#    spool:     { type: memory }

hwi_oauth:
    firewall_names: [secured_area]
    resource_owners:
        qq:
            type:   qq
            client_id: 101292429
            client_secret: 323681cc0f259767c9cf3eab33f8ac9a

    # 与FOSUserBundle结合，并且将QQ返回的用户Id同我们创建的User类的qqId属性绑定
    fosub:
        properties:
            qq: qqId
    # 实现User和QQ用户的绑定：如果使用QQ帐号登录，但是还没有绑定本地用户，创建新用户同登录的QQ帐号绑定
    connect: ~

fos_user:
    db_driver: orm
    firewall_name: secured_area
    user_class: AppBundle\Entity\User

#services:
#    hwi_oauth.user.provider.entity:
#        class: HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider
jms_di_extra:
    locations:
        all_bundles: false
        bundles: [JMSTranslationBundle]
jms_translation:
    configs:
        app:
            dirs: ['%kernel.root_dir%/Resources', '%kernel.root_dir%/../src']
            output_dir: '%kernel.root_dir%/Resources/translations'
services:
    twig.text_extension:
        class: Twig_Extensions_Extension_Text
        tags:
            - name: twig.extension
knp_paginator:
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig
